var _user$project$App$requestRandom = _elm_lang$core$Native_Platform.outgoingPort(
	'requestRandom',
	function (v) {
		return v;
	});
var _user$project$App$receiveRandom = _elm_lang$core$Native_Platform.incomingPort('receiveRandom', _elm_lang$core$Json_Decode$float);
var _user$project$App$requestCheck = _elm_lang$core$Native_Platform.outgoingPort(
	'requestCheck',
	function (v) {
		return v;
	});
var _user$project$App$update = F2(
	function (msg, _p0) {
		var _p1 = _p0;
		var _p14 = _p1.two;
		var _p13 = _p1.time;
		var _p12 = _p1.three;
		var _p11 = _p1.size;
		var _p10 = _p1.six;
		var _p9 = _p1.seven;
		var _p8 = _p1.rand;
		var _p7 = _p1.one;
		var _p6 = _p1.four;
		var _p5 = _p1.five;
		var _p4 = _p1.collision;
		var _p3 = _p1.circleYPosition;
		if (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$Tuple$first(_p7),
			-25) < 0) {
			return {
				ctor: '_Tuple2',
				_0: {
					circleYPosition: _p3,
					one: {ctor: '_Tuple2', _0: 125, _1: _p8},
					two: _p14,
					three: _p12,
					four: _p6,
					five: _p5,
					six: _p10,
					seven: _p9,
					time: _p13,
					rand: _p8,
					collision: _p4,
					size: _p11
				},
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			if (_elm_lang$core$Native_Utils.cmp(
				_elm_lang$core$Tuple$first(_p14),
				-25) < 0) {
				return {
					ctor: '_Tuple2',
					_0: {
						circleYPosition: _p3,
						one: _p7,
						two: {ctor: '_Tuple2', _0: 125, _1: _p8},
						three: _p12,
						four: _p6,
						five: _p5,
						six: _p10,
						seven: _p9,
						time: _p13,
						rand: _p8,
						collision: _p4,
						size: _p11
					},
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				if (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$Tuple$first(_p12),
					-25) < 0) {
					return {
						ctor: '_Tuple2',
						_0: {
							circleYPosition: _p3,
							one: _p7,
							two: _p14,
							three: {ctor: '_Tuple2', _0: 125, _1: _p8},
							four: _p6,
							five: _p5,
							six: _p10,
							seven: _p9,
							time: _p13,
							rand: _p8,
							collision: _p4,
							size: _p11
						},
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					if (_elm_lang$core$Native_Utils.cmp(
						_elm_lang$core$Tuple$first(_p6),
						-25) < 0) {
						return {
							ctor: '_Tuple2',
							_0: {
								circleYPosition: _p3,
								one: _p7,
								two: _p14,
								three: _p12,
								four: {ctor: '_Tuple2', _0: 125, _1: _p8},
								five: _p5,
								six: _p10,
								seven: _p9,
								time: _p13,
								rand: _p8,
								collision: _p4,
								size: _p11
							},
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						if (_elm_lang$core$Native_Utils.cmp(
							_elm_lang$core$Tuple$first(_p5),
							-25) < 0) {
							return {
								ctor: '_Tuple2',
								_0: {
									circleYPosition: _p3,
									one: _p7,
									two: _p14,
									three: _p12,
									four: _p6,
									five: {ctor: '_Tuple2', _0: 125, _1: _p8},
									six: _p10,
									seven: _p9,
									time: _p13,
									rand: _p8,
									collision: _p4,
									size: _p11
								},
								_1: _elm_lang$core$Platform_Cmd$none
							};
						} else {
							if (_elm_lang$core$Native_Utils.cmp(
								_elm_lang$core$Tuple$first(_p10),
								-25) < 0) {
								return {
									ctor: '_Tuple2',
									_0: {
										circleYPosition: _p3,
										one: _p7,
										two: _p14,
										three: _p12,
										four: _p6,
										five: _p5,
										six: {ctor: '_Tuple2', _0: 125, _1: _p8},
										seven: _p9,
										time: _p13,
										rand: _p8,
										collision: _p4,
										size: _p11
									},
									_1: _elm_lang$core$Platform_Cmd$none
								};
							} else {
								if (_elm_lang$core$Native_Utils.cmp(
									_elm_lang$core$Tuple$first(_p9),
									-25) < 0) {
									return {
										ctor: '_Tuple2',
										_0: {
											circleYPosition: _p3,
											one: _p7,
											two: _p14,
											three: _p12,
											four: _p6,
											five: _p5,
											six: _p10,
											seven: {ctor: '_Tuple2', _0: 125, _1: _p8},
											time: _p13,
											rand: _p8,
											collision: _p4,
											size: _p11
										},
										_1: _elm_lang$core$Platform_Cmd$none
									};
								} else {
									var _p2 = msg;
									switch (_p2.ctor) {
										case 'MouseMsg':
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3 - 10, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13, rand: _p8, collision: _p4, size: _p11},
												_1: _elm_lang$core$Platform_Cmd$none
											};
										case 'Tick':
											return {
												ctor: '_Tuple2',
												_0: {
													circleYPosition: _p3 + 5.0e-2,
													one: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p7) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p7)
													},
													two: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p14) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p14)
													},
													three: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p12) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p12)
													},
													four: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p6) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p6)
													},
													five: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p5) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p5)
													},
													six: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p10) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p10)
													},
													seven: {
														ctor: '_Tuple2',
														_0: _elm_lang$core$Tuple$first(_p9) - 5.0e-2,
														_1: _elm_lang$core$Tuple$second(_p9)
													},
													time: _p13,
													rand: _p8,
													collision: _p4,
													size: _p11
												},
												_1: _user$project$App$requestCheck(0)
											};
										case 'Tock':
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13 + 1, rand: _p8, collision: _p4, size: _p11},
												_1: _user$project$App$requestRandom(0)
											};
										case 'Request':
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13, rand: _p8, collision: _p4, size: _p11},
												_1: _user$project$App$requestRandom(_p2._0)
											};
										case 'Received':
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13, rand: _p2._0, collision: _p4, size: _p11},
												_1: _elm_lang$core$Platform_Cmd$none
											};
										case 'RequestCollision':
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13, rand: _p8, collision: _p4, size: _p11},
												_1: _user$project$App$requestCheck(_p2._0)
											};
										case 'ReceivedCollision':
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13, rand: _p8, collision: _p2._0, size: _p11},
												_1: _elm_lang$core$Platform_Cmd$none
											};
										default:
											return {
												ctor: '_Tuple2',
												_0: {circleYPosition: _p3, one: _p7, two: _p14, three: _p12, four: _p6, five: _p5, six: _p10, seven: _p9, time: _p13, rand: _p8, collision: _p4, size: _p2._0},
												_1: _elm_lang$core$Platform_Cmd$none
											};
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$App$receiveCheck = _elm_lang$core$Native_Platform.incomingPort('receiveCheck', _elm_lang$core$Json_Decode$bool);
var _user$project$App$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {circleYPosition: a, one: b, two: c, three: d, four: e, five: f, six: g, seven: h, time: i, rand: j, collision: k, size: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$App$Size = function (a) {
	return {ctor: 'Size', _0: a};
};
var _user$project$App$init = {
	ctor: '_Tuple2',
	_0: {
		circleYPosition: 50,
		one: {ctor: '_Tuple2', _0: 0, _1: 50},
		two: {ctor: '_Tuple2', _0: 25, _1: 20},
		three: {ctor: '_Tuple2', _0: 50, _1: 40},
		four: {ctor: '_Tuple2', _0: 75, _1: 75},
		five: {ctor: '_Tuple2', _0: 100, _1: 30},
		six: {ctor: '_Tuple2', _0: 125, _1: 50},
		seven: {ctor: '_Tuple2', _0: 150, _1: 20},
		time: 0,
		rand: 0,
		collision: false,
		size: {width: 0, height: 0}
	},
	_1: A2(_elm_lang$core$Task$perform, _user$project$App$Size, _elm_lang$window$Window$size)
};
var _user$project$App$ReceivedCollision = function (a) {
	return {ctor: 'ReceivedCollision', _0: a};
};
var _user$project$App$RequestCollision = function (a) {
	return {ctor: 'RequestCollision', _0: a};
};
var _user$project$App$Received = function (a) {
	return {ctor: 'Received', _0: a};
};
var _user$project$App$Request = function (a) {
	return {ctor: 'Request', _0: a};
};
var _user$project$App$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin', _1: '0'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model.rand)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'margin', _1: '0'},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.collision)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$svg,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id('svg'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$App$Request(0)),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$rect,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$id('upperHitBox'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$width('50px'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$height('10'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$fill('blue'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														{
															ctor: '::',
															_0: {
																ctor: '_Tuple2',
																_0: 'y',
																_1: A2(
																	_elm_lang$core$Basics_ops['++'],
																	'calc(',
																	A2(
																		_elm_lang$core$Basics_ops['++'],
																		_elm_lang$core$Basics$toString(model.circleYPosition),
																		'% - 180px'))
															},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'x', _1: 'calc(50% - 25px)'},
																_1: {ctor: '[]'}
															}
														}),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$rect,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$id('lowerHitBox'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$width('50px'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$height('10'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$fill('red'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$style(
															{
																ctor: '::',
																_0: {
																	ctor: '_Tuple2',
																	_0: 'y',
																	_1: A2(
																		_elm_lang$core$Basics_ops['++'],
																		'calc(',
																		A2(
																			_elm_lang$core$Basics_ops['++'],
																			_elm_lang$core$Basics$toString(model.circleYPosition),
																			'% + 170px'))
																},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'x', _1: 'calc(50% - 25px)'},
																	_1: {ctor: '[]'}
																}
															}),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$ellipse,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$cx('50%'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$cy(
													A2(
														_elm_lang$core$Basics_ops['++'],
														_elm_lang$core$Basics$toString(model.circleYPosition),
														'%')),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$rx('100'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$ry('180'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$fill('none'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$svg$Svg$circle,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$id('upperHitCircle'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$cx('50%'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$cy(
															_elm_lang$core$Basics$toString(
																((_elm_lang$core$Basics$toFloat(model.size.height) * 1.0e-2) * model.circleYPosition) - 200)),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$r('30'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$fill('red'),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$svg$Svg$circle,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$id('lowerHitCircle'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$cx('50%'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$cy(
																_elm_lang$core$Basics$toString(
																	((_elm_lang$core$Basics$toFloat(model.size.height) * 1.0e-2) * model.circleYPosition) + 200)),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$r('30'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$fill('blue'),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$svg$Svg$g,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$id('track'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$svg$Svg$line,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$id('line1'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$height('10'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$x1(
																			A2(
																				_elm_lang$core$Basics_ops['++'],
																				_elm_lang$core$Basics$toString(
																					_elm_lang$core$Tuple$first(model.one)),
																				'%')),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$y1(
																				A2(
																					_elm_lang$core$Basics_ops['++'],
																					_elm_lang$core$Basics$toString(
																						_elm_lang$core$Tuple$second(model.one)),
																					'%')),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$x2(
																					A2(
																						_elm_lang$core$Basics_ops['++'],
																						_elm_lang$core$Basics$toString(
																							_elm_lang$core$Tuple$first(model.one) + 25),
																						'%')),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$y2(
																						A2(
																							_elm_lang$core$Basics_ops['++'],
																							_elm_lang$core$Basics$toString(
																								_elm_lang$core$Tuple$second(model.two)),
																							'%')),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																							_1: {ctor: '[]'}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$svg$Svg$line,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$id('line2'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$height('10'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$x1(
																				A2(
																					_elm_lang$core$Basics_ops['++'],
																					_elm_lang$core$Basics$toString(
																						_elm_lang$core$Tuple$first(model.two)),
																					'%')),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$y1(
																					A2(
																						_elm_lang$core$Basics_ops['++'],
																						_elm_lang$core$Basics$toString(
																							_elm_lang$core$Tuple$second(model.two)),
																						'%')),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$x2(
																						A2(
																							_elm_lang$core$Basics_ops['++'],
																							_elm_lang$core$Basics$toString(
																								_elm_lang$core$Tuple$first(model.two) + 25),
																							'%')),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$y2(
																							A2(
																								_elm_lang$core$Basics_ops['++'],
																								_elm_lang$core$Basics$toString(
																									_elm_lang$core$Tuple$second(model.three)),
																								'%')),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																								_1: {ctor: '[]'}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																},
																{ctor: '[]'}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$svg$Svg$line,
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$id('line3'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$height('10'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$x1(
																					A2(
																						_elm_lang$core$Basics_ops['++'],
																						_elm_lang$core$Basics$toString(
																							_elm_lang$core$Tuple$first(model.three)),
																						'%')),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$y1(
																						A2(
																							_elm_lang$core$Basics_ops['++'],
																							_elm_lang$core$Basics$toString(
																								_elm_lang$core$Tuple$second(model.three)),
																							'%')),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$x2(
																							A2(
																								_elm_lang$core$Basics_ops['++'],
																								_elm_lang$core$Basics$toString(
																									_elm_lang$core$Tuple$first(model.three) + 25),
																								'%')),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$svg$Svg_Attributes$y2(
																								A2(
																									_elm_lang$core$Basics_ops['++'],
																									_elm_lang$core$Basics$toString(
																										_elm_lang$core$Tuple$second(model.four)),
																									'%')),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																								_1: {
																									ctor: '::',
																									_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																									_1: {ctor: '[]'}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	{ctor: '[]'}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$svg$Svg$line,
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html_Attributes$id('line4'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$height('10'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$x1(
																						A2(
																							_elm_lang$core$Basics_ops['++'],
																							_elm_lang$core$Basics$toString(
																								_elm_lang$core$Tuple$first(model.four)),
																							'%')),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$y1(
																							A2(
																								_elm_lang$core$Basics_ops['++'],
																								_elm_lang$core$Basics$toString(
																									_elm_lang$core$Tuple$second(model.four)),
																								'%')),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$svg$Svg_Attributes$x2(
																								A2(
																									_elm_lang$core$Basics_ops['++'],
																									_elm_lang$core$Basics$toString(
																										_elm_lang$core$Tuple$first(model.four) + 25),
																									'%')),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$svg$Svg_Attributes$y2(
																									A2(
																										_elm_lang$core$Basics_ops['++'],
																										_elm_lang$core$Basics$toString(
																											_elm_lang$core$Tuple$second(model.five)),
																										'%')),
																								_1: {
																									ctor: '::',
																									_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																									_1: {
																										ctor: '::',
																										_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																										_1: {ctor: '[]'}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		{ctor: '[]'}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$svg$Svg$line,
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html_Attributes$id('line5'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$height('10'),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$x1(
																							A2(
																								_elm_lang$core$Basics_ops['++'],
																								_elm_lang$core$Basics$toString(
																									_elm_lang$core$Tuple$first(model.five)),
																								'%')),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$svg$Svg_Attributes$y1(
																								A2(
																									_elm_lang$core$Basics_ops['++'],
																									_elm_lang$core$Basics$toString(
																										_elm_lang$core$Tuple$second(model.five)),
																									'%')),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$svg$Svg_Attributes$x2(
																									A2(
																										_elm_lang$core$Basics_ops['++'],
																										_elm_lang$core$Basics$toString(
																											_elm_lang$core$Tuple$first(model.five) + 25),
																										'%')),
																								_1: {
																									ctor: '::',
																									_0: _elm_lang$svg$Svg_Attributes$y2(
																										A2(
																											_elm_lang$core$Basics_ops['++'],
																											_elm_lang$core$Basics$toString(
																												_elm_lang$core$Tuple$second(model.six)),
																											'%')),
																									_1: {
																										ctor: '::',
																										_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																										_1: {
																											ctor: '::',
																											_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																											_1: {ctor: '[]'}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			{ctor: '[]'}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$svg$Svg$line,
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html_Attributes$id('line6'),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$height('10'),
																						_1: {
																							ctor: '::',
																							_0: _elm_lang$svg$Svg_Attributes$x1(
																								A2(
																									_elm_lang$core$Basics_ops['++'],
																									_elm_lang$core$Basics$toString(
																										_elm_lang$core$Tuple$first(model.six)),
																									'%')),
																							_1: {
																								ctor: '::',
																								_0: _elm_lang$svg$Svg_Attributes$y1(
																									A2(
																										_elm_lang$core$Basics_ops['++'],
																										_elm_lang$core$Basics$toString(
																											_elm_lang$core$Tuple$second(model.six)),
																										'%')),
																								_1: {
																									ctor: '::',
																									_0: _elm_lang$svg$Svg_Attributes$x2(
																										A2(
																											_elm_lang$core$Basics_ops['++'],
																											_elm_lang$core$Basics$toString(
																												_elm_lang$core$Tuple$first(model.six) + 25),
																											'%')),
																									_1: {
																										ctor: '::',
																										_0: _elm_lang$svg$Svg_Attributes$y2(
																											A2(
																												_elm_lang$core$Basics_ops['++'],
																												_elm_lang$core$Basics$toString(
																													_elm_lang$core$Tuple$second(model.one)),
																												'%')),
																										_1: {
																											ctor: '::',
																											_0: _elm_lang$svg$Svg_Attributes$stroke('black'),
																											_1: {
																												ctor: '::',
																												_0: _elm_lang$svg$Svg_Attributes$strokeWidth('10'),
																												_1: {ctor: '[]'}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				{ctor: '[]'}),
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														}
													}),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$App$request = function (x) {
	return _user$project$App$Request(0);
};
var _user$project$App$Tock = function (a) {
	return {ctor: 'Tock', _0: a};
};
var _user$project$App$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$App$MouseMsg = function (a) {
	return {ctor: 'MouseMsg', _0: a};
};
var _user$project$App$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$mouse$Mouse$clicks(_user$project$App$MouseMsg),
			_1: {
				ctor: '::',
				_0: _elm_lang$animation_frame$AnimationFrame$times(_user$project$App$Tick),
				_1: {
					ctor: '::',
					_0: _elm_lang$animation_frame$AnimationFrame$times(_user$project$App$Tock),
					_1: {
						ctor: '::',
						_0: _user$project$App$receiveRandom(_user$project$App$Received),
						_1: {
							ctor: '::',
							_0: _user$project$App$receiveCheck(_user$project$App$ReceivedCollision),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$App$main = _elm_lang$html$Html$program(
	{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})();
